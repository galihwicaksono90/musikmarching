package inputs

type TextInputProps struct {
	Label       string
	Placeholder string
	Name        string
	Error       string
	Value       string
}

templ TextInput(props TextInputProps) {
	<div class="flex w-full max-w-xs flex-col gap-1 text-neutral-600 dark:text-neutral-300">
		<label for={ props.Name } class={ templ.KV("text-red-500", props.Error != "") , "flex w-fit items-center gap-1 pl-0.5 text-sm" }>
			if  props.Error  != "" {
				<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" aria-hidden="true" fill="currentColor" class="w-4 h-4">
					<path d="M5.28 4.22a.75.75 0 0 0-1.06 1.06L6.94 8l-2.72 2.72a.75.75 0 1 0 1.06 1.06L8 9.06l2.72 2.72a.75.75 0 1 0 1.06-1.06L9.06 8l2.72-2.72a.75.75 0 0 0-1.06-1.06L8 6.94 5.28 4.22Z"></path>
				</svg>
			}
			{ props.Label }
		</label>
		<input
			id="textInputDefault"
			type="text"
			class={ templ.KV("border-red-500 dark:border-red-500", props.Error != ""), "w-full rounded-md border border-neutral-300 bg-neutral-50 px-2 py-2 text-sm focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-black disabled:cursor-not-allowed disabled:opacity-75 dark:border-neutral-700 dark:bg-neutral-900/50 dark:focus-visible:outline-white" }
			name={ props.Name }
			placeholder={ props.Placeholder }
			autocomplete={ props.Name }
			value={ props.Value }
		/>
		if props.Error != "" {
			<small class="pl-0.5 text-red-500">{ props.Error }</small>
		}
	</div>
}
